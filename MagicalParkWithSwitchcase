/*Piyush is lost in a magical park which contains N rows and M columns.
In order to get out of park safely and return home, he needs atleast K amount of strength.Given a N by M pattern, your task is to find weather Piyush can ever escape the park.*/



/*Piyush enters the park with strength S. The park is filled with some obstacles denoted by ‘.’ , some magical beans denoted by ‘*’
and some blockades denoted as ‘#’. If he encounters an obstacle (.) , strength decreases by 2. If he encounters a magic bean (' * ') , his strength increases by 5.
Piyush can only walk row wise, so he starts from left of a row and moves towards right and he does this for every row. However when he encounters a blockade (#) ,
he cannot go any further in his current row and simply jumps to the start of a new line without losing any strength. Piyush requires a strength of 1 for every step.
His strength should always be greater than K while traversing or else Piyush will get lost. Assume that Piyush can shift immediately from last of one row to the start 
of next one without loss of any strength, help out Piyush to escape the park. His escape is successful if he is able to return home with atleast K strength.*/

//Using SwitchCase

package magicalpark;
import java.util.*;
public class MagicalPark {
    static int checkstrength(String arr[][],int n,int m,int s,int k){
        String value;
        if(s<k)
            return s;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                value=arr[i][j];
                switch(value){
                    case "." :s=s-2;
                    break;
                    case"*":s=s+5;break;
                    case"#":j=m-1;break;
            }
                if(j!=n-1)
                    s--;
        }
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the size of the row ");
        int n=sc.nextInt();
        System.out.println("Enter the size of the colomn ");
        int m=sc.nextInt();
        System.out.println("Enter minimum Strength ");
        int k=sc.nextInt();
        System.out.println("Enter the total Strength");
        int s=sc.nextInt();
        System.out.println("Enter elements ");
        String arr[][]=new String[n][m];
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                arr[i][j]=sc.next();
            }
        }
        int res=checkstrength(arr,n,m,s,k);
        if(res>k)
            System.out.println("Yes he can return home");
        else
            System.out.println("NO, he cannot return home;");
    }   
}

OUTPUT:
Enter the size of the row 
4
Enter the size of the colomn 
4
Enter minimum Strength 
5
Enter the total Strength
20
Enter elements 
.
.
*
.
.
#
.
.
*
*
.
.
.
#
*
*
Yes he can return home
